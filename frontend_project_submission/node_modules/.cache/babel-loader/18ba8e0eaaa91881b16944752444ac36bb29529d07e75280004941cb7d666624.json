{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getURLByShortCode, recordClick } from '../utils/helpers';\nimport { logger } from '../utils/Logger';\nconst RedirectHandler = () => {\n  _s();\n  const {\n    shortCode\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const url = getURLByShortCode(shortCode);\n    if (url) {\n      const source = document.referrer || 'direct';\n      const location = navigator.language || 'unknown';\n      recordClick(shortCode, source, location);\n      logger.info('Redirecting to long URL', {\n        shortCode,\n        longUrl: url.longUrl\n      });\n      window.location.href = url.longUrl;\n    } else {\n      logger.error('Invalid or expired shortcode', {\n        shortCode\n      });\n      navigate('/error', {\n        state: {\n          message: 'Invalid or expired short URL'\n        }\n      });\n    }\n  }, [shortCode, navigate]);\n  return null;\n};\n_s(RedirectHandler, \"Wx91PklyyMy5YJd7Orjoj5NmizU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RedirectHandler;\nexport default RedirectHandler;\nvar _c;\n$RefreshReg$(_c, \"RedirectHandler\");","map":{"version":3,"names":["React","useEffect","useParams","useNavigate","getURLByShortCode","recordClick","logger","RedirectHandler","_s","shortCode","navigate","url","source","document","referrer","location","navigator","language","info","longUrl","window","href","error","state","message","_c","$RefreshReg$"],"sources":["/home/admin/Desktop/22331A0568/Frontend/src/components/RedirectHandler.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getURLByShortCode, recordClick } from '../utils/helpers';\nimport { logger } from '../utils/Logger';\n\nconst RedirectHandler = () => {\n  const { shortCode } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const url = getURLByShortCode(shortCode);\n    if (url) {\n      const source = document.referrer || 'direct';\n      const location = navigator.language || 'unknown';\n      recordClick(shortCode, source, location);\n      logger.info('Redirecting to long URL', { shortCode, longUrl: url.longUrl });\n      window.location.href = url.longUrl;\n    } else {\n      logger.error('Invalid or expired shortcode', { shortCode });\n      navigate('/error', { state: { message: 'Invalid or expired short URL' } });\n    }\n  }, [shortCode, navigate]);\n\n  return null;\n};\n\nexport default RedirectHandler;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,iBAAiB,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,SAASC,MAAM,QAAQ,iBAAiB;AAExC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAU,CAAC,GAAGP,SAAS,CAAC,CAAC;EACjC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMU,GAAG,GAAGP,iBAAiB,CAACK,SAAS,CAAC;IACxC,IAAIE,GAAG,EAAE;MACP,MAAMC,MAAM,GAAGC,QAAQ,CAACC,QAAQ,IAAI,QAAQ;MAC5C,MAAMC,QAAQ,GAAGC,SAAS,CAACC,QAAQ,IAAI,SAAS;MAChDZ,WAAW,CAACI,SAAS,EAAEG,MAAM,EAAEG,QAAQ,CAAC;MACxCT,MAAM,CAACY,IAAI,CAAC,yBAAyB,EAAE;QAAET,SAAS;QAAEU,OAAO,EAAER,GAAG,CAACQ;MAAQ,CAAC,CAAC;MAC3EC,MAAM,CAACL,QAAQ,CAACM,IAAI,GAAGV,GAAG,CAACQ,OAAO;IACpC,CAAC,MAAM;MACLb,MAAM,CAACgB,KAAK,CAAC,8BAA8B,EAAE;QAAEb;MAAU,CAAC,CAAC;MAC3DC,QAAQ,CAAC,QAAQ,EAAE;QAAEa,KAAK,EAAE;UAAEC,OAAO,EAAE;QAA+B;MAAE,CAAC,CAAC;IAC5E;EACF,CAAC,EAAE,CAACf,SAAS,EAAEC,QAAQ,CAAC,CAAC;EAEzB,OAAO,IAAI;AACb,CAAC;AAACF,EAAA,CAnBID,eAAe;EAAA,QACGL,SAAS,EACdC,WAAW;AAAA;AAAAsB,EAAA,GAFxBlB,eAAe;AAqBrB,eAAeA,eAAe;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}